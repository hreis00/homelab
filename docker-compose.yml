services:
  heimdall:
    image: linuxserver/heimdall:2.6.3
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config:/config
    networks:
      - app-network
    restart: unless-stopped

  glances:
    image: nicolargo/glances:3.4.0.2-full
    container_name: glances
    pid: host
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - GLANCES_OPT=-w
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.1.2
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=${GF_USERS_ALLOW_SIGN_UP}
    ports:
      - "3002:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped

  storage-bucket:
    build:
      context: ./storage-bucket
      args:
        - MONGODB_URI=mongodb://mongodb:27017/storage-bucket
        - NEXTAUTH_URL=${NEXTAUTH_URL}
        - NEXTAUTH_SECRET= ${NEXTAUTH_SECRET}
        - NEXT_PUBLIC_API_URL= ${NEXT_PUBLIC_API_URL}
    container_name: storage-bucket
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - mongodb
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    command: ["mongod", "--quiet", "--logpath", "/dev/null"]
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://mongodb:27017/
    depends_on:
      - mongodb
    networks:
      - app-network

volumes:
  prometheus_data:
  grafana_data:
  mongodb_data:
    name: storage-bucket-mongodb-data

networks:
  app-network:
    driver: bridge
